@page "/allefrivillige"
@using festivalprojekt.Client.Services;
@using festivalprojekt.Shared.Models;
@using System;
@using System.Globalization;

<!-- Injecter Blazors navigation manager, Nuget pakket LocalStorage og AppStatus -->
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject AppStatus AppState

<PageTitle>Alle frivllige</PageTitle>

<div class="d-flex justify-content-center">
    <h3> <u> Alle frivillige </u> </h3>
</div>

<!-- Home knap der altid går til /home-->
<button class="btn btn-dark" @onclick="@HomePage">Home</button>

<!--Opretter tabel med alle frivillige-->
<div>
    <h5> <br /> Frivillig </h5>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Navn</th>
                <th style="width: 6%">Alder</th>
                <th>Fødselsdag</th>
                <th style="width: 18%">Email</th>
                <th>Telefon</th>
                <th style="width: 26%">Kompetencer</th>
                <th style="width: 8%"> </th>
            </tr>
        </thead>

        <!--går igennem friviiligliste og fylder tabellen ud-->
        <tbody>
            @foreach (var frivillig in frivilligListe)
            {

            <tr>
                <td>@frivillig.Fornavn @frivillig.Efternavn</td>
                <td>@Alder(frivillig)</td>
                <td>@frivillig.RealF.Value.ToString("dd.MMMMM yyyy")</td>
                <td>@frivillig.Email</td>
                <td>@frivillig.Telefon</td>
                <td>
                    @for (int i = 0; i < frivillig.KompetenceNavn.Length; i++)
                    {
                        if (frivillig.KompetenceNavn[0] == frivillig.KompetenceNavn[i])
                        {
                            <a> @frivillig.KompetenceNavn[i]</a>
                        }
                        else
                        {
                            <a>, @frivillig.KompetenceNavn[i]</a>
                        }

                    }
                </td>
                <td><button type="button" class="btn btn-dark btn-sm">Send mail</button></td>
            </tr>

            }
        </tbody>
    </table>
</div>

<!--Opretter tabel med alle frivillige-koordinator-->
<div>
    <h5> <br /> Frivillig koordinator </h5>
    <table class="table table-striped">
        <thead>
            
            <tr>
                <th>Navn</th>
                <th style="width: 6%">Alder</th>
                <th>Fødselsdag</th>
                <th style="width: 18%">Email</th>
                <th>Telefon</th>
                <th style="width: 26%">Kompetencer</th>
                <th style="width: 8%" > </th>
            </tr>
        </thead>

        <!--går igennem friviiligkoordinatorliste og fylder tabellen ud-->
        <tbody>
            @foreach (var koordinator in frivilligKoordinatorListe)
            {
                <tr>
                    <td>@koordinator.Fornavn @koordinator.Efternavn</td>
                    <td>@Alder(koordinator)</td>
                    <td>@koordinator.RealF.Value.ToString("dd.MMMMM yyyy")</td>
                    <td>@koordinator.Email</td>
                    <td>@koordinator.Telefon</td>
                    <td>
                        @for (int i = 0; i < koordinator.KompetenceNavn.Length; i++)
                        {
                            if (koordinator.KompetenceNavn[0] == koordinator.KompetenceNavn[i])
                            {
                                <a> @koordinator.KompetenceNavn[i]</a>
                            }
                            else
                            {
                                <a>, @koordinator.KompetenceNavn[i]</a>
                            }
                        }
                    </td>
                    <td><button type="button" class="btn btn-dark btn-sm">Send mail</button></td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {

    //Variabler 
    public int ErrorCode { get; set; }

    //Local storage 
    public int rolle_id;

    //Lister 
    public List<PersonDTO> frivilligListe = new List<PersonDTO>();
    public List<PersonDTO> frivilligKoordinatorListe = new List<PersonDTO>();
    public List<PersonDTO> personListeUsorteret = new List<PersonDTO>();

    //Injecter Service så vi kan bruge metoderne derfra.
    [Inject]
    public IPersonService Service { get; set; }

    //personListeUsorteret henter alle personer.
    //derefter hentes alle frivillige, bliver sorteret på RolleId = 1 og frivillige koordinatorer bliver sorteret på RolleId = 2
    protected override async Task OnInitializedAsync()
    {
        rolle_id = await localStorage.GetItemAsync<int>("RolleId");

        if (rolle_id == 0)
        {
            LoginPage();
        }
        else
        {
            //AppState sætter dig til at være logget ind
            AppState.OnChange += StateHasChanged;
            AppState.Log(true);

            personListeUsorteret = (await Service.HentAllePersoner()).ToList();

            frivilligListe = personListeUsorteret.FindAll(x => x.RolleId == 1);
            foreach (var frivillig in frivilligListe)
            {
                frivillig.RealF = DateTime.ParseExact(frivillig.Fødselsdag.Substring(0, 19), "yyyy-MM-dd H:mm:ss", CultureInfo.InvariantCulture);
            }

            frivilligKoordinatorListe = personListeUsorteret.FindAll(x => x.RolleId == 2);
            foreach (var koordinator in frivilligKoordinatorListe)
            {
                koordinator.RealF = DateTime.ParseExact(koordinator.Fødselsdag.Substring(0, 19), "yyyy-MM-dd H:mm:ss", CultureInfo.InvariantCulture);
            }
        }
    }

    //Udregner alder 
    public int Alder(PersonDTO x)
    {
        int nu = int.Parse(DateTime.Now.ToString("yyyyMMdd"));
        int født = int.Parse(x.RealF.Value.ToString("yyyyMMdd"));
        return (nu - født) / 10000;

    }

    //Navigere tilbage til Home
    public void HomePage()
    {
        NavigationManager.NavigateTo("/home");
    }

    //Navigere tilbage til Login
    public void LoginPage()
    {
        NavigationManager.NavigateTo("/");
    }
}
