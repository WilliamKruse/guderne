@page "/allefrivillige"
@using festivalprojekt.Client.Services;
@using festivalprojekt.Shared.Models;
@using System;
@using System.Globalization;

@inject NavigationManager NavigationManager

<PageTitle>Alle frivllige</PageTitle>
<div class="d-flex justify-content-center">
    <h3>Alle frivillige</h3>
</div>

<button class="button" @onclick="@HomePage">Home</button>

<div>

    <h5> <br /> Frivillig </h5>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Fornavn</th>
                <th>Efternavn</th>
                <th>Fødselsdag</th>
                <th>Email</th>
                <th>Telefon</th>
                <th>Kompetencer</th>
                <th> </th>
            </tr>
        </thead>

        <!--går igennem ledigevagterliste og laver en tabel-->
        <tbody>
            @foreach (var frivillig in frivilligListe)
            {

            <tr>
                <td>@frivillig.Fornavn</td>
                <td>@frivillig.Efternavn</td>
                <td>@frivillig.RealF.Value.ToString("dd.MMMMM yyyy")</td>
                <td>@frivillig.Email</td>
                <td>@frivillig.Telefon</td>
                <td>
                    @foreach (var kompetence in frivillig.KompetenceNavn)
                    {

                        <ul>
                            <li>
                                @kompetence
                            </li>
                        </ul>
                    }
                            </td>
                <td><button type="button" class="btn btn-primary">Send mail</button></td>
            </tr>


            }
        </tbody>
    </table>

</div>

<div>

    <h5> <br /> Frivillig koordinator </h5>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Navn</th>
                <th>Alder</th>
                <th>Fødselsdag</th>
                <th>Email</th>
                <th>Telefon</th>
                <th>Kompetencer</th>
                <th> </th>
            </tr>
        </thead>

        <!--går igennem ledigevagterliste og laver en tabel-->
        <tbody>
            @foreach (var koordinator in frivilligKoordinatorListe)
            {
                <tr>
                    <td>@koordinator.Fornavn @koordinator.Efternavn</td>
                    <td>@Alder(koordinator)</td>
                    <td>@koordinator.RealF.Value.ToString("dd.MMMMM yyyy")</td>
                    <td>@koordinator.Email</td>
                    <td>@koordinator.Telefon</td>
                    <td>
                        @for (int i = 0; i < koordinator.KompetenceNavn.Length; i++)
                        {
                            if (koordinator.KompetenceNavn[0] == koordinator.KompetenceNavn[i])
                            {
                                <a> @koordinator.KompetenceNavn[i]</a>
                            }
                            else
                            {
                                <a>, @koordinator.KompetenceNavn[i]</a>
                            }

                        }
                    </td>
                    <td><button type="button" class="btn btn-primary">Send mail</button></td>
                </tr>

            }
        </tbody>
    </table>

</div>



@code {


    public List<PersonDTO> frivilligListe = new List<PersonDTO>();
    public List<PersonDTO> frivilligKoordinatorListe = new List<PersonDTO>();
    public List<PersonDTO> personListeUsorteret = new List<PersonDTO>();
    


    public int ErrorCode { get; set; }


    [Inject]
    public IPersonService Service { get; set; }

    //personListeUsorteret henter alle personer.
    //derefter hentes alle frivillige (bliver sorteret på RolleId som er 1) og frivillige koordinatorer (bliver sorteret på RolleId som er 2)
    protected override async Task OnInitializedAsync()
    {
        personListeUsorteret = (await Service.HentAllePersoner()).ToList();

        frivilligListe = personListeUsorteret.FindAll(x => x.RolleId == 1);
        foreach (var frivillig in frivilligListe)
        {
            frivillig.RealF = DateTime.ParseExact(frivillig.Fødselsdag.Substring(0, 19), "yyyy-MM-dd H:mm:ss", CultureInfo.InvariantCulture);
        }


        frivilligKoordinatorListe = personListeUsorteret.FindAll(x => x.RolleId == 2);

        foreach (var koordinator in frivilligKoordinatorListe)
        {
            koordinator.RealF = DateTime.ParseExact(koordinator.Fødselsdag.Substring(0, 19), "yyyy-MM-dd H:mm:ss", CultureInfo.InvariantCulture);
        }



    }
    public int Alder(PersonDTO x)
    {
        int nu = int.Parse(DateTime.Now.ToString("yyyyMMdd"));
        int født = int.Parse(x.RealF.Value.ToString("yyyyMMdd"));
        return (nu - født) / 10000;



    }

    public void HomePage()
    {
        NavigationManager.NavigateTo("/home");
    }

}
