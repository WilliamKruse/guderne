
@page "/"
@using festivalprojekt.Shared.Models;
@using festivalprojekt.Client.Services;

@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>LOGIN</PageTitle>

<h3 class="d-flex justify-content-center">Login</h3>
<div class="container">
    <div class="row">
        <div class="col"></div>
        <div class="col 6 pt-8" style="border-radius:10px; background-color:lightgray">
            <EditForm EditContext="@editContext" class="row p-3" OnValidSubmit="() => SubmitHandler(this.emailkode)" OnInvalidSubmit="@InvalidSubmitHandler">
                <DataAnnotationsValidator />

                <div class="col-md-12 mb-3">
                    <label>Email</label>

                    <InputText id="email" @bind-Value="emailkode.Email" class="form-control" />

                    <ValidationMessage For="@(() => emailkode.Email)" />
                </div>
                <div class="col-md-12 mb-3">
                    <label>Kodeord</label>

                    <InputText type="password" id="kodeord" @bind-Value="emailkode.Kode" class="form-control" />

                    <ValidationMessage For="@(() => emailkode.Kode)" />
                </div>

                <div class="d-flex justify-content-center mb-8">
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </EditForm>
            <div class="d-flex justify-content-center">
                <div class="text-muted">Ikke allerede tilmeldt?</div>

            </div>
            <div class="d-flex justify-content-center">
                <a href="/signup" class="link-primary">Sign Up</a>
            </div>
            @if (loginejl)
            {
                <div class="alert alert-danger" role="alert">
                    <strong>Fejl..</strong> Dine oplysninger er tastet forkert ind, prøv igen.
                </div>
            }
        </div>
        <div class="col"></div>
    </div>
</div>

@code {
    public PersonDTO person = new PersonDTO();
    public LoginDTO emailkode = new LoginDTO();
    public EditContext editContext;
    public bool loginejl = false;


    [Inject]
    ILoginService Service { get; set; }
    protected override void OnInitialized()
    {
        editContext = new EditContext(emailkode);
    }

    protected override async Task OnInitializedAsync()
    {
        ;
    }

    public async void SubmitHandler(LoginDTO x)
    {
        if (emailkode.Email.Length < 1)
        {
            return;
        }
        IEnumerable<PersonDTO> TempList = await Service.HentLoginPerson(x);

        if (TempList.Count() > 0)
        {
            person = TempList.First();
            await localStorage.SetItemAsync("PersonId", person.PersonId);
            await localStorage.SetItemAsync("RolleId", person.RolleId);
            HomePage();
        }
        else
        {
            loginejl = true;
        }

    }
    public void InvalidSubmitHandler()
    {
        ;
    }

    public void HomePage()
    {
        NavigationManager.NavigateTo("/home");
    }
}
