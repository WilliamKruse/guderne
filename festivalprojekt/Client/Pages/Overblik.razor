@page "/overblikkoordinator"
@using festivalprojekt.Shared.Models;
@using festivalprojekt.Client.Services;
@using System.Globalization;

@inject NavigationManager NavigationManager;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<PageTitle>Overblik</PageTitle>
<h3>Overblik</h3>
<button class="button" @onclick="@HomePage">Home</button>
<div class="container">
    <div class="row">
        <div class="col-sm-6">

            <ul class="list-unstyled">
                @foreach (var vagttype in VagtTypeList)
                {

                    <li class="mt-4">
                        <div class="fw-bold">
                            @vagttype.VagtTypeNavn
                            <button type="button" class="btn delete" @onclick="() => SletVagtTypeHandler(vagttype)"> <span class="oi oi-trash"></span></button>
                            <button type="button" class="btn update" @onclick="() => OpdaterVagtTypeHandler(vagttype)"> <span class="oi oi-pencil"></span></button>
                        </div>
                        <ul class="list-group list-group-light">
                            @foreach (var vagt in VagterList)
                            {
                                @if (vagt.VagtTypeId == vagttype.VagtTypeID)
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        <div class="fw-bold"> @vagt.VagtTypeOmråde</div>
                                        <div class="text-muted"> Fra: @vagt.StartTid.ToString("H:mm") Til: @vagt.SlutTid.ToString("H:mm") <br> Den: @vagt.StartTid.ToString("dd.MMMM")</div>
                                        <button type="button" class="btn delete" @onclick="() => SletVagtHandler(vagt)"> <span class="oi oi-trash"></span></button>
                                    </li>

                                }
                            }
                        </ul>
                    </li>

                }
            </ul>
        </div>
        <div class="col-sm-6 pt-4">
            <div class="sticky-top">
                <EditForm EditContext="@editContext" class="row p-3" OnValidSubmit="() => OpretVagtHandler(this.NyVagt)" OnInvalidSubmit="@InvalidSubmitHandler">
                    <DataAnnotationsValidator />

                    <div class="col-md-12 mb-3">
                        <label>Vagt Type</label>
                        <InputSelect id="vagttype" @bind-Value="NyVagt.VagtTypeId" class="form-control">
                            <option value="0">Vælg Vagttype</option>
                            @foreach (var type in VagtTypeList)
                            {
                                <option value=@type.VagtTypeID>@type.VagtTypeNavn - @type.VagtTypeOmråde</option>
                            }

                        </InputSelect>
                        <ValidationMessage For="@(() => NyVagt.VagtId)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Start Dato</label>
                        <InputDate id="sluttid" @bind-Value="NyVagt.StartTid" class="form-control" />
                        <ValidationMessage For="@(() => NyVagt.StartTid)" />
                    </div>
                    <div class="col-md-3 mb-3">
                        <label>Start Tid</label>
                        <InputSelect id="sluttid" @bind-Value="StarttidTimer" class="form-control">
                            @for (var i = 1; i < 24; i++)
                            {
                                if (i < 10)
                                {
                                    string display = "0" + i;
                                    <option value=@display>@display</option>
                                }
                                else
                                {
                                    <option value=@i>@i</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => NyVagt.SlutTid)" />
                    </div>

                    <div class="col-md-3 mb-3 ">
                        <label></label>
                        <InputSelect id="sluttid" @bind-Value="StarttidMinutter" class="form-control">
                            @for (var i = 0; i < 60; i = i + 5)
                            {
                                if (i < 10)
                                {
                                    string display = "0" + i;
                                    <option value=@display>@display</option>
                                }
                                else
                                {
                                    <option value=@i>@i</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => NyVagt.StartTid)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Slut Dato</label>
                        <InputDate id="sluttid" @bind-Value="NyVagt.SlutTid" class="form-control" />
                        <ValidationMessage For="@(() => NyVagt.SlutTid)" />
                    </div>
                    <div class="col-md-3 mb-3">
                        <label>Slut Tid</label>
                        <InputSelect id="sluttid" @bind-Value="SluttidTimer" class="form-control">
                            @for (var i = 1; i < 24; i++)
                            {
                                if (i < 10)
                                {
                                    string display = "0" + i;
                                    <option value=@display>@display</option>
                                }
                                else
                                {
                                    <option value=@i>@i</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => NyVagt.SlutTid)" />
                    </div>

                    <div class="col-md-3 mb-3">
                        <label></label>
                        <InputSelect id="sluttid" @bind-Value="SluttidMinutter" class="form-control">
                            @for (var i = 0; i < 60; i = i + 10)
                            {
                                if (i < 10)
                                {
                                    string display = "0" + i;
                                    <option value=@display>@display</option>
                                }
                                else
                                {
                                    <option value=@i>@i</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => NyVagt.SlutTid)" />
                    </div>
                    <div class="col-md-4 mb-3">
                        <label>Antal vagter</label>
                        <InputNumber id="telefon" @bind-Value="Antal" class="form-control" />

                    </div>

                    <div class="col-12 mb-6">
                        <button type="submit" class="btn btn-primary">Opret Vagt</button>
                        <button href="opretvagttype" type="button" class="btn btn-secondary" @onclick="@OpretVagtTypePage">Opret ny vagttype</button>
                    </div>
                </EditForm>

                @if (errorcodevagt == 200)
                {
                    <div class="alert alert-success mt-4" role="alert">
                        <strong>Succes!</strong> Den nye vagt er registreret i systemet.
                    </div>

                }
                @if (AntalNegativt == true)
                {
                    <div class="alert alert-danger mt-4" role="alert">
                        <strong>Fejl..</strong> Du skal oprette mindst én vagt!
                    </div>

                }
            </div>
        </div>
    </div>
</div>
@code {
    //local storage ting
    public int p_id = 1;
    public int r_id;
    //bruges til listen
    public int errorcode;
    public int errorcodevagt;
    public List<VagtView> VagterList = new List<VagtView>();
    public List<VagtTypeDTO> VagtTypeList = new List<VagtTypeDTO>();
    //bruges til form
    public EditContext editContext;
    public VagtDTO NyVagt = new VagtDTO();
    public int Antal = 1;
    public string StarttidTimer = "12";
    public string StarttidMinutter = "30";
    public string SluttidTimer = "12";
    public string SluttidMinutter = "30";
    public bool AntalNegativt = false;

    [Inject]
    public IVagtTypeService TypeService { get; set; }
    [Inject]
    public IVagtService VagtService { get; set; }

    protected override async Task OnInitializedAsync()
    {

        r_id = await sessionStorage.GetItemAsync<int>("RolleId");

        if (r_id == 0)
        {
            LoginPage();
        }

        VagterList = (await VagtService.HentAlleVagter("ALLE", p_id)).ToList();


    }
    protected override void OnInitialized()
    {
        editContext = new EditContext(NyVagt);
        NyVagt.StartTid = DateTime.Now;
        NyVagt.SlutTid = DateTime.Now;
        LavDato();
        NyVagt.VagtTypeId = 1;

    }

    public async Task SletVagtHandler(VagtView v)
    {

        errorcode = await VagtService.SletVagt(v.VagtId);
        //VagterList = null;

        //StateHasChanged();
        VagterList = (await VagtService.HentAlleVagter("ALLE", p_id)).ToList();

        // await InvokeAsync(() =>
        //{
        //  StateHasChanged();
        //});

    }

    public async Task SletVagtTypeHandler(VagtTypeDTO v)
    {

        foreach (var vagt in VagterList)
        {
            if (vagt.VagtTypeId == v.VagtTypeID.Value)
            {
                errorcode = await VagtService.SletVagt(vagt.VagtId);
            }
        }

        errorcode = await TypeService.SletVagtType(v.VagtTypeID.Value);
        VagtTypeList = null;
        VagterList = (await VagtService.HentAlleVagter("ALLE", p_id)).ToList();
        VagtTypeList = (await TypeService.HentAlleVagtTyper()).ToList();
        this.StateHasChanged();


    }

    public void OpdaterVagtTypeHandler(VagtTypeDTO vagtType)
    {
        OpdaterVagtTypePage(vagtType);
    }

    public void LavDato()
    {

        NyVagt.StartTid = DateTime.ParseExact(NyVagt.StartTid.ToString("yyyy-MM-dd") + " " + StarttidTimer + ":" + StarttidMinutter, "yyyy-MM-dd H:mm", CultureInfo.InvariantCulture);
        NyVagt.SlutTid = DateTime.ParseExact(NyVagt.SlutTid.ToString("yyyy-MM-dd") + " " + SluttidTimer + ":" + SluttidMinutter, "yyyy-MM-dd H:mm", CultureInfo.InvariantCulture);
    }
    public async Task OpretVagtHandler(VagtDTO NyVagt)
    {
        if (Antal < 1)
        {
            AntalNegativt = true;
            return;
        }
        AntalNegativt = false;
        LavDato();
        for (var i = 0; i < Antal; i++)
        {

            if (NyVagt.StartTid >= NyVagt.SlutTid)
            {
                Console.WriteLine("Fejl");
            }
            else
            {
                Console.WriteLine("Succes");
                errorcode = await VagtService.OpretVagt(NyVagt);
            }


        }

        NyVagt = new VagtDTO();
        Antal = 1;
        editContext = new EditContext(NyVagt);
        VagterList = null;
        VagterList = (await VagtService.HentAlleVagter("ALLE", p_id)).ToList();
        //await InvokeAsync(() =>
        //{
        //  StateHasChanged();
        //});

    }
    public void InvalidSubmitHandler()
    {
        ;
    }

    public void OpretVagtTypePage()
    {
        NavigationManager.NavigateTo("/opretvagttype");
    }

    public void HomePage()
    {
        NavigationManager.NavigateTo("/home");
    }

    public void LoginPage()
    {
        NavigationManager.NavigateTo("/");
    }

    public void OpdaterVagtTypePage(VagtTypeDTO vagtType)
    {
        NavigationManager.NavigateTo("/opretvagttype");
    }

}
