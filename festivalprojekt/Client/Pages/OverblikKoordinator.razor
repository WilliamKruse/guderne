@page "/overblikkoordinator"
@using festivalprojekt.Shared.Models;
@using festivalprojekt.Client.Services;
@using System;


<PageTitle>Overblik koordinator</PageTitle>
<div class="container">
    <div class="row">
        <div class="col-sm-6 pt-4">
            <h1>Oversigt</h1>
            <ul>
                @foreach (var item in vagter)
                {
                    <li>
                        <p>
                            Navn: @item.VagtTypeNavn
                        </p>
                    </li>
                }
            </ul>
        </div>

        <div class="col-sm-6">
            <div class="sticky-top">
                <div style="text-align: right;">
                    <button type="button" class="btn btn-primary">Opret vagttype</button>
                </div>
                <h1>Opret vagt</h1>

                <EditForm EditContext="@EditContext" class="row p-3"
                          OnValidSubmit="@OpretVagtHandler"
                          OnInvalidSubmit="@HandleInvalidSubmit">
                    <DataAnnotationsValidator />

                    <div class="col-md-12 mb-3">
                        <label for="VagtType">Vagt type navn</label>
                        <InputSelect id="vagtType" @bind-Value="vagtView.VagtTypeId" class="form-control">
                            @foreach (var item in vagtTyper)
                            {
                                <option>@item</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Start dato</label>
                        <InputDate id="start" @bind-Value="vagt.StartTid" class="form-control" />
                        <ValidationMessage For="@(() => vagt.StartTid)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Slut dato</label>
                        <InputDate id="slut" @bind-Value="vagt.SlutTid" class="form-control" />
                        <ValidationMessage For="@(() => vagt.SlutTid)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Start tid</label>
                        <InputDate id="slutTid" @bind-Value="vagt.SlutTid" class="form-control" />
                        <ValidationMessage For="@(() => vagt.SlutTid)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label>Slut tid</label>
                        <InputDate id="slutTid" @bind-Value="vagt.SlutTid" class="form-control" />
                        <ValidationMessage For="@(() => vagt.SlutTid)" />
                    </div>
                    <div>
                        <div class="col-md-6 mb-3">
                            <label>Antal der skal oprettes</label>
                            <InputNumber id="antal" @bind-Value="antal"></InputNumber>
                        </div>
                    </div>
                    <div class="col-12 mb-6" style="text-align: right;">
                        <button type="submit" class="btn btn-primary">Opret vagt</button>
                    </div>
                </EditForm>
            </div>

        </div>


    </div>
</div>


@code {

    public List<VagtTypeDTO> vagtTyper = new List<VagtTypeDTO>();
    public List<VagtView> vagter = new List<VagtView>();
    public VagtView vagtView = new VagtView();
    public VagtDTO vagt = new VagtDTO();
    public int antal;

    public int ErrorCode { get; set; }
    public EditContext EditContext;

    [Inject]
    public IVagtService vagtService { get; set; }
    [Inject]
    public IVagtTypeService vagtTypeService { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //vagter = (await vagtService.HentAlleVagter("ALLE", vagtView.PersonId.Value)).ToList();
        //vagtTyper = (await vagtTypeService.HentAlleVagtTyper("ALLE", vagtView.PersonId.Value)).ToList();
    }

    protected override void OnInitialized()
    {
        EditContext = new EditContext(vagt);
    }

    public async Task OpretVagtHandler()
    {
        ErrorCode = await (vagtService.OpretVagt(vagt));
        vagt = new VagtDTO();
        EditContext = new EditContext(vagt);
        Console.WriteLine("Oprettet");
    }

    public void HandleInvalidSubmit()
    {
        Console.WriteLine("Fejl");
    }
}

