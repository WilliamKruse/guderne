@page "/personligeoplysninger";
@using festivalprojekt.Shared.Models;
@using System;
@using festivalprojekt.Client.Services;
@using System.Globalization;

@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>Personlige oplysninger</PageTitle>
<button class="button" @onclick="@HomePage">Home</button>

<EditForm EditContext="@editContext" class="row p-3" OnValidSubmit="() => OpdaterPersonHandler(this.Person)" OnInvalidSubmit="@InvalidSubmitHandler">
    <DataAnnotationsValidator />

    <div class="col-md-12 mb-3">
        <label>Fornavn</label>
        <InputText id="fornavn" @bind-Value="Person.Fornavn" class="form-control" />
        <ValidationMessage For="@(() => Person.Fornavn)" />
    </div>
    <div class="col-md-12 mb-3">
        <label>Efternavn</label>
        <InputText id="efternavn" @bind-Value="Person.Efternavn" class="form-control" />
        <ValidationMessage For="@(() => Person.Efternavn)" />
    </div>
    <div class="col-md-12 mb-3">
        <label>Telefon</label>
        <InputText id="telefon" @bind-Value="Person.Telefon" class="form-control" />
        <ValidationMessage For="@(() => Person.Telefon)" />
    </div>
    <div class="col-md-6 mb-3">
        <label>FødselsDato</label>
        <InputDate id="føds" @bind-Value="Person.RealF" class="form-control" />
        <ValidationMessage For="@(() => Person.RealF)" />
    </div>
    <div class="col-md-6 mb-3">
        <label>Email</label>
        <InputText id="email" @bind-Value="Person.Email" class="form-control" />
        <ValidationMessage For="@(() => Person.Email)" />
    </div>
    <div class="col-md-6 mb-3">
        <label>Nyt Kodeord</label>
        <InputText id="kodeord" @bind-Value="Person.Kodeord" class="form-control" />
        <ValidationMessage For="@(() => Person.Kodeord)" />
    </div>
    <h5>Dine kompetencer</h5>
    <ul>
        @foreach (var k in AlleKompetencer)
        {
            <div>
                <input type="checkbox" id="@k.KompetenceNavn.ToLower()" name="@k.KompetenceNavn.ToLower()" @bind="k.Checker" />
                <label for="@k.KompetenceNavn.ToLower()">@k.KompetenceNavn</label>
            </div>
        }
    </ul>
    <div class="col-12 mb-6">
        <button type="submit" class="btn btn-primary">Opdater</button>
    </div>
</EditForm>




@code {
    public PersonDTO Person = new PersonDTO();
    public List<PersonDTO> TempList = new List<PersonDTO>();
    public List<Kompetencer> AlleKompetencer = new List<Kompetencer>();
    public int p_id;
    public int r_id;
    public int errorcode;
    private EditContext editContext;

    [Inject]
    IPersonService Service { get; set; }

    protected override async Task OnInitializedAsync()
    {
        p_id = await localStorage.GetItemAsync<int>("PersonId");
        r_id = await localStorage.GetItemAsync<int>("RolleId");

        if (r_id == 0)
        {
            LoginPage();
        }

        TempList = (await Service.HentPerson(p_id)).ToList();
        Person = TempList.First();

        Person.RealF = DateTime.ParseExact(Person.Fødselsdag.Substring(0, 19), "yyyy-MM-dd H:mm:ss", CultureInfo.InvariantCulture);

        AlleKompetencer = (await Service.HentAlleKompetencer()).ToList();
        foreach (var k in AlleKompetencer)
        {
            k.Checker = Array.Exists(Person.KompetenceNavn, x => x == k.KompetenceNavn);
        }
        Person.Kodeord = "";
    }
    protected override void OnInitialized()
    {
        editContext = new EditContext(Person);
    }

    public async void OpdaterPersonHandler(PersonDTO person)
    {
        MatchBox();
        errorcode = await Service.OpdaterPerson(person);
        NavigationManager.NavigateTo("/home");


    }
    public void MatchBox()
    {
        List<int> i = new List<int>();
        List<string> s = new List<string>();

        foreach (var k in AlleKompetencer)
        {
            if (k.Checker)
            {
                i.Add(k.KompetenceId);
                s.Add(k.KompetenceNavn);
            }
        }
        Person.KompetenceNavn = s.ToArray();
        Person.KompetenceId = i.ToArray();

    }
    public void InvalidSubmitHandler()
    {
        ;
    }

    public void HomePage()
    {
        NavigationManager.NavigateTo("/home");
    }

    public void LoginPage()
    {
        NavigationManager.NavigateTo("/");
    }
}

