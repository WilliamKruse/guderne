@page "/"
@using festivalprojekt.Shared.Models;
@using festivalprojekt.Client.Services;

<!-- Injecter Blazors navigation manager, Nuget pakket LocalStorage og AppStatus -->
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject AppStatus AppState

<PageTitle>LOGIN</PageTitle>

<div class="d-flex justify-content-center">
    <h3> <u> Login </u> </h3>
</div>

<div class="container">
    <div class="row">
        <div class="col"></div>
        <div class="col 6 pt-8" style="border-radius:10px; ">
            <EditForm EditContext="@editContext" class="row p-3" 
                      OnValidSubmit="() => SubmitHandler(this.emailKode)" OnInvalidSubmit="@InvalidSubmitHandler">
                <DataAnnotationsValidator />

                <!--Opretter et tomt felt til email-->
                <div class="col-md-12 mb-3">
                    <label></label>
                    <InputText id="email" @bind-Value="emailKode.Email" class="form-control" placeholder="Email" />
                    <ValidationMessage For="@(() => emailKode.Email)" />
                </div>

                <!--Opretter et tomt felt til kodeord-->
                <div class="col-md-12 mb-3">
                    <label></label>
                    <InputText type="password" id="kodeord" @bind-Value="emailKode.Kode" class="form-control" placeholder="Kodeord" />
                    <ValidationMessage For="@(() => emailKode.Kode)" />
                </div>

                    <!--Hvordan login knappen ser ud, når der ikke loades-->
                    @if (loginLoading == false)
                    {
                        <div class="d-flex justify-content-center mb-8">
                            <button type="submit" class="w-50 btn btn-dark mt-8">Login</button>
                        </div>
                        
                    }
                    else if (loginLoading == true)
                    {
                         <!--Hvordan login knappen ser ud, når der loades-->
                        <div class="d-flex justify-content-center mb-8">
                            <button class="w-50 btn" type="button" disabled>
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            Loading...
                        </button>
                        </div>
                    }              
            </EditForm>

            <!--Link til signup-->
            <div class="d-flex justify-content-center">
                <div class="text-grey">Ikke allerede tilmeldt? <small> <a href="/signup" class="link-secondary"> Sign Up</a></small></div>
            </div>
           
            <!--Alert hvis der er forkerte oplysninger-->
            @if (loginFejl)

            {
                <div class="alert alert-danger mt-2" role="alert">
                    <strong>Fejl..</strong> Dine oplysninger er tastet forkert ind, prøv igen.
                </div>
            }
        </div>
        <div class="col"></div>
    </div>
</div>

@code {

    //Variabler
    public PersonDTO person = new PersonDTO();
    public LoginDTO emailKode = new LoginDTO();
    public EditContext editContext;
    public bool loginFejl = false;
    public bool loginLoading = false;

    //Service
    [Inject]
    ILoginService Service { get; set; }

    //Laver nyt edit context objekt når siden starter, modelerer ud fra email og kode.
    protected override void OnInitialized()
    {
        editContext = new EditContext(emailKode);
    }

    protected override async Task OnInitializedAsync()
    {
        ;
    }

    //Logger en person ind
    public async void SubmitHandler(LoginDTO login)
    {
        login.Email = login.Email.ToLower();
        loginLoading = true;

        if (emailKode.Email.Length < 1)
        {
            loginFejl = true;
            loginLoading = false;
            StateHasChanged();
            return;
        }

        IEnumerable<PersonDTO> TempList = await Service.HentLoginPerson(login);

        if (TempList.Count() > 0)
        {
            person = TempList.First();
            await localStorage.SetItemAsync("PersonId", person.PersonId);
            await localStorage.SetItemAsync("RolleId", person.RolleId);

            //AppState sætter dig til at være logget ind
            AppState.OnChange += StateHasChanged;
            AppState.Log(true);

            HomePage();
        }
        else {
            loginFejl = true;
            loginLoading = false;
            StateHasChanged();
        }
    }

    //Hvis der indtastes indvalid data
    public void InvalidSubmitHandler()
    {
        Console.WriteLine("Invalid data");
    }

    //Navigere til Home 
    public void HomePage()
    {
        NavigationManager.NavigateTo("/home");
    }
}
