
@page "/login"
@using festivalprojekt.Shared.Models;
@using festivalprojekt.Client.Services;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
<h3>Login</h3>

<EditForm EditContext="@editContext" class="row p-3" OnValidSubmit="() => SubmitHandler(this.emailkode)" OnInvalidSubmit="@InvalidSubmitHandler">
    <DataAnnotationsValidator />

    <div class="col-md-12 mb-3">
        <label>Email</label>
        <InputText id="fornavn" @bind-Value="emailkode.Email" class="form-control" />
        <ValidationMessage For="@(() => emailkode.Email)" />
    </div>
    <div class="col-md-12 mb-3">
        <label>Kodeord</label>
        <InputText Type="password" id="efternavn" @bind-Value="emailkode.Kode" class="form-control" />
        <ValidationMessage For="@(() => emailkode.Kode)" />
    </div>

    <div class="col-12 mb-6">
        <button type="submit" class="btn btn-primary">Login</button>
    </div>
</EditForm>
<div>
    <div class="text-muted">Ikke allerede tilmeldt?</div>
    <a href="/signup" class="link-primary">Sign Up</a>
</div>
@if (loginejl)
{
    <div class="alert alert-danger" role="alert">
        <strong>Fejl..</strong> Dine oplysninger er tastet forkert ind, prøv igen.
    </div>
}

@code {
    public PersonDTO person = new PersonDTO();
    public LoginDTO emailkode = new LoginDTO();
    public EditContext editContext;
    public bool loginejl = false;


    [Inject]
    ILoginService Service { get; set; }
    protected override void OnInitialized()
    {
        editContext = new EditContext(emailkode);
    }

    protected override async Task OnInitializedAsync()
    {
        ;
    }

    public async void SubmitHandler(LoginDTO x)
    {

        IEnumerable<PersonDTO> TempList = await Service.HentLoginPerson(x);

        if (TempList.Count() > 0)
        {
            person = TempList.First();
            await sessionStorage.SetItemAsync("PersonId", person.PersonId);
            await sessionStorage.SetItemAsync("RolleId", person.RolleId);
        }
        else
        {
            loginejl = true;
        }

    


    }
    public void InvalidSubmitHandler()
    {
        ;
    }
}
